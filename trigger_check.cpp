#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#define verbose 0
#define L3limit 180//180,429,945
#define GMASTER 5
#define debug 1
#define DET 40  //descriminator exitation time

//int levels[112]={181,191,185,222,202,191,195,222,189,183,222,187,213,201,197,203,203,209,210,240,191,191,192,206,192,187,179,204,199,191,212,185,188,176,198,187,189,180,212,211,209,209,211,205,198,196,220,200,212,171,255,209,181,187,182,181,216,187,185,188,192,213,191,184,186,184,187,206,190,199,255,229,208,238,223,510,256,225,523,261,191,232,202,226,238,250,221,212,213,255,195,214,246,220,183,199,174,197,194,183,186,186,180,182,232,198,178,191,193,168,168,201};

int F[15][15]= {{1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},
		{1000,1000,1000,1000,1000,1000,1000,1000,1000,  99,  98,  97,1000,1000,1000},
		{1000,1000,1000,1000,1000,1000,1000,  76,  75,  74,  73,  72,  71,1000,1000},
		{1000,1000,1000,1000,1000, 100,  77,  49,  48,  47,  46,  45,  70,  96,1000},
		{1000,1000,1000,1000, 101,  78,  50,  28,  27,  26,  25,  44,  69,  95,1000},
		{1000,1000,1000, 102,  79,  51,  29,  13,  12,  11,  24,  43,  68,  94,1000},
		{1000,1000,1000,  80,  52,  30,  14,   4,   3,  10,  23,  42,  67,1000,1000},
		{1000,1000,  81,  53,  31,  15,   5,   0,   2,   9,  22,  41,  66,1000,1000},
		{1000,1000,  82,  54,  32,  16,   6,   1,   8,  21,  40,  65,1000,1000,1000},
		{1000, 103,  83,  55,  33,  17,  18,   7,  20,  39,  64,  93,1000,1000,1000},
		{1000, 104,  84,  56,  34,  35,  36,  19,  38,  63,  92,1000,1000,1000,1000},
		{1000, 105,  85,  57,  58,  59,  60,  37,  62,  91,1000,1000,1000,1000,1000},
		{1000,1000,  86,  87,  88,  89,  90,  61,1000,1000,1000,1000,1000,1000,1000},  
		{1000,1000,1000, 106, 107, 108,1000,1000,1000,1000,1000,1000,1000,1000,1000},
		{1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000}};

int levels[112];
int i,j;
int Toff[112];
int feed[112][512];
FILE *fp;
double Tm[112],Sc;

//int triggers[109][33]={{361,362,366,368,372,375,378,380,460,462,464,468,469,470,471,472,473,474,475,476,477,478,482,487,489,565,569,571,575,576,578,581,585},{469,470,474,476,480,483,486,488,568,570,572,576,577,578,579,580,581,582,583,584,585,586,590,595,597,673,677,679,683,684,686,689,693},{372,373,377,379,383,386,389,391,471,473,475,479,480,481,482,483,484,485,486,487,488,489,493,498,500,576,580,582,586,587,589,592,596},{264,265,269,271,275,278,281,283,363,365,367,371,372,373,374,375,376,377,378,379,380,381,385,390,392,468,472,474,478,479,481,484,488},{253,254,258,260,264,267,270,272,352,354,356,360,361,362,363,364,365,366,367,368,369,370,374,379,381,457,461,463,467,468,470,473,477},{350,351,355,357,361,364,367,369,449,451,453,457,458,459,460,461,462,463,464,465,466,467,471,476,478,554,558,560,564,565,567,570,574},{458,459,463,465,469,472,475,477,557,559,561,565,566,567,568,569,570,571,572,573,574,575,579,584,586,662,666,668,672,673,675,678,682},{577,578,582,584,588,591,594,596,676,678,680,684,685,686,687,688,689,690,691,692,693,694,698,703,705,777,781,783,787,788,790,793,797},{480,481,485,487,491,494,497,499,579,581,583,587,588,589,590,591,592,593,594,595,596,597,601,606,608,684,688,690,694,695,697,700,704},{383,384,388,390,394,397,400,402,482,484,486,490,491,492,493,494,495,496,497,498,499,500,504,509,511,587,591,593,597,598,600,603,607},{275,276,280,282,286,289,292,294,374,376,378,382,383,384,385,386,387,388,389,390,391,392,396,401,403,479,483,485,489,490,492,495,499},{171,172,176,178,182,185,188,190,266,268,270,274,275,276,277,278,279,280,281,282,283,284,288,293,295,371,375,377,381,382,384,387,391},{160,161,165,167,171,174,177,179,255,257,259,263,264,265,266,267,268,269,270,271,272,273,277,282,284,360,364,366,370,371,373,376,380},{149,150,154,156,160,163,166,168,244,246,248,252,253,254,255,256,257,258,259,260,261,262,266,271,273,349,353,355,359,360,362,365,369},{242,243,247,249,253,256,259,261,341,343,345,349,350,351,352,353,354,355,356,357,358,359,363,368,370,446,450,452,456,457,459,462,466},{339,340,344,346,350,353,356,358,438,440,442,446,447,448,449,450,451,452,453,454,455,456,460,465,467,543,547,549,553,554,556,559,563},{447,448,452,454,458,461,464,466,546,548,550,554,555,556,557,558,559,560,561,562,563,564,568,573,575,651,655,657,661,662,664,667,671},{555,556,560,562,566,569,572,574,654,656,658,662,663,664,665,666,667,668,669,670,671,672,676,681,683,755,759,761,765,766,768,771,775},{566,567,571,573,577,580,583,585,665,667,669,673,674,675,676,677,678,679,680,681,682,683,687,692,694,766,770,772,776,777,779,782,786},{685,686,690,692,696,699,702,704,780,782,784,788,789,790,791,792,793,794,795,796,797,798,802,807,809,867,871,873,877,878,880,883,887},{588,589,593,595,599,602,605,607,687,689,691,695,696,697,698,699,700,701,702,703,704,705,709,714,716,788,792,794,798,799,801,804,808},{491,492,496,498,502,505,508,510,590,592,594,598,599,600,601,602,603,604,605,606,607,608,612,617,619,695,699,701,705,706,708,711,715},{394,395,399,401,405,408,411,413,493,495,497,501,502,503,504,505,506,507,508,509,510,511,515,520,522,598,602,604,608,609,611,614,618},{286,287,291,293,297,300,303,305,385,387,389,393,394,395,396,397,398,399,400,401,402,403,407,412,414,490,494,496,500,501,503,506,510},{182,183,187,189,193,196,199,201,277,279,281,285,286,287,288,289,290,291,292,293,294,295,299,304,306,382,386,388,392,393,395,398,402},{92,93,97,99,103,106,109,111,173,175,177,181,182,183,184,185,186,187,188,189,190,191,195,200,202,274,278,280,284,285,287,290,294},{81,82,86,88,92,95,98,100,162,164,166,170,171,172,173,174,175,176,177,178,179,180,184,189,191,263,267,269,273,274,276,279,283},{70,71,75,77,81,84,87,89,151,153,155,159,160,161,162,163,164,165,166,167,168,169,173,178,180,252,256,258,262,263,265,268,272},{59,60,64,66,70,73,76,78,140,142,144,148,149,150,151,152,153,154,155,156,157,158,162,167,169,241,245,247,251,252,254,257,261},{138,139,143,145,149,152,155,157,233,235,237,241,242,243,244,245,246,247,248,249,250,251,255,260,262,338,342,344,348,349,351,354,358},{231,232,236,238,242,245,248,250,330,332,334,338,339,340,341,342,343,344,345,346,347,348,352,357,359,435,439,441,445,446,448,451,455},{328,329,333,335,339,342,345,347,427,429,431,435,436,437,438,439,440,441,442,443,444,445,449,454,456,532,536,538,542,543,545,548,552},{436,437,441,443,447,450,453,455,535,537,539,543,544,545,546,547,548,549,550,551,552,553,557,562,564,640,644,646,650,651,653,656,660},{544,545,549,551,555,558,561,563,643,645,647,651,652,653,654,655,656,657,658,659,660,661,665,670,672,744,748,750,754,755,757,760,764},{652,653,657,659,663,666,669,671,747,749,751,755,756,757,758,759,760,761,762,763,764,765,769,774,776,834,838,840,844,845,847,850,854},{663,664,668,670,674,677,680,682,758,760,762,766,767,768,769,770,771,772,773,774,775,776,780,785,787,845,849,851,855,856,858,861,865},{674,675,679,681,685,688,691,693,769,771,773,777,778,779,780,781,782,783,784,785,786,787,791,796,798,856,860,862,866,867,869,872,876},{789,790,794,796,800,803,806,808,870,872,874,878,879,880,881,882,883,884,885,886,887,888,890,895,929,931,935,936,1000,1000,1000,1000,1000},{696,697,701,703,707,710,713,715,791,793,795,799,800,801,802,803,804,805,806,807,808,809,813,818,820,878,882,884,888,889,892,894,1000},{599,600,604,606,610,613,616,618,698,700,702,706,707,708,709,710,711,712,713,714,715,716,720,725,727,799,803,805,809,810,812,815,819},{502,503,507,509,513,516,519,521,601,603,605,609,610,611,612,613,614,615,616,617,618,619,625,627,706,710,712,716,717,719,722,726,1000},{405,406,410,412,416,418,421,504,506,508,512,513,514,515,516,517,518,519,520,521,522,609,613,615,619,620,622,626,1000,1000,1000,1000,1000},{297,298,302,304,308,311,314,316,396,398,400,404,405,406,407,408,409,410,411,412,413,414,420,422,501,505,507,511,512,514,517,521,1000},{193,194,198,200,204,207,210,212,288,290,292,296,297,298,299,300,301,302,303,304,305,306,310,315,317,393,397,399,403,404,406,409,413},{103,104,108,110,113,117,119,184,186,188,192,193,194,195,196,197,198,199,200,201,202,206,211,213,285,289,291,295,296,298,301,305,1000},{40,41,45,47,94,96,98,102,103,104,105,106,107,108,109,110,111,112,115,118,181,185,187,191,192,194,197,201,1000,1000,1000,1000,1000},{30,31,35,37,40,44,46,83,85,87,91,92,93,94,95,96,97,98,99,100,101,105,110,112,170,174,176,180,181,183,186,190,1000},{19,20,24,26,30,33,36,38,72,74,76,80,81,82,83,84,85,86,87,88,89,90,94,99,101,159,163,165,169,170,172,175,179},{11,14,16,19,22,25,27,61,63,65,69,70,71,72,73,74,75,76,77,78,79,83,88,90,148,152,154,158,159,161,164,168,1000},{9,11,13,15,52,55,58,59,60,61,62,63,64,65,66,67,68,72,77,79,137,141,143,147,148,150,153,157,1000,1000,1000,1000,1000},{51,54,56,59,62,65,67,129,131,133,137,138,139,140,141,142,143,144,145,146,147,151,156,158,230,234,236,240,241,243,246,250,1000},{127,128,132,134,138,141,144,146,222,224,226,230,231,232,233,234,235,236,237,238,239,240,244,249,251,327,331,333,337,338,340,343,347},{220,221,225,227,231,234,237,239,323,325,327,328,329,330,331,332,333,334,335,336,337,341,346,348,424,428,430,434,435,437,440,444,1000},{320,321,324,328,331,334,336,424,425,426,427,428,429,430,431,432,433,434,438,443,445,524,527,529,532,534,537,541,1000,1000,1000,1000,1000},{425,426,430,432,436,439,442,444,528,530,532,533,534,535,536,537,538,539,540,541,542,546,551,553,629,633,635,639,640,642,645,649,1000},{533,534,538,540,544,547,550,552,632,634,636,640,641,642,643,644,645,646,647,648,649,650,654,659,661,733,737,739,743,744,746,749,753},{641,642,646,648,652,655,658,660,736,738,740,744,745,746,747,748,749,750,751,752,753,754,758,763,765,827,831,833,834,836,839,843,1000},{745,746,750,752,756,759,762,764,829,830,834,835,836,837,838,839,840,841,842,843,844,848,853,855,898,900,901,903,1000,1000,1000,1000,1000},{756,757,761,763,767,770,773,775,837,839,841,845,846,847,848,849,850,851,852,853,854,855,859,864,866,900,904,906,907,909,912,916,1000},{767,768,772,774,778,781,784,786,848,850,852,856,857,858,859,860,861,862,863,864,865,866,870,875,877,907,911,913,917,918,920,923,927},{778,779,783,785,789,792,795,797,859,861,863,867,868,869,870,871,872,873,874,875,876,877,881,886,888,918,922,924,928,929,932,934,1000},{879,880,884,886,891,893,894,930,932,933,936,937,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{800,801,805,807,811,814,817,819,881,883,885,889,890,891,892,893,894,895,897,936,937,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{707,708,712,714,718,721,724,726,802,804,806,810,811,812,813,814,815,816,817,818,819,820,824,889,891,895,896,1000,1000,1000,1000,1000,1000},{610,611,615,617,621,623,626,709,711,713,717,718,719,720,721,722,723,724,725,726,727,810,814,816,820,821,823,1000,1000,1000,1000,1000,1000},{513,514,518,520,523,612,614,616,620,621,622,623,624,625,626,627,717,721,723,727,728,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{416,417,419,420,515,517,519,523,620,623,624,627,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{308,309,313,315,318,407,409,411,415,416,417,418,419,420,421,422,512,516,518,522,523,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{204,205,209,211,214,217,299,301,303,307,308,309,310,311,312,313,314,315,316,317,404,408,410,414,415,417,421,1000,1000,1000,1000,1000,1000},{113,114,118,120,195,197,199,203,204,205,206,207,208,209,210,211,212,213,216,296,300,302,306,307,309,312,316,1000,1000,1000,1000,1000,1000},{47,48,105,107,109,113,114,115,116,117,118,119,121,192,196,198,202,203,205,208,212,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{42,43,44,47,48,102,106,108,112,114,116,119,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{7,8,32,34,36,40,41,42,43,44,45,46,48,91,95,97,101,102,104,107,111,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{3,6,7,21,23,25,29,30,31,32,33,34,35,36,37,38,39,42,45,80,84,86,90,91,93,96,100,1000,1000,1000,1000,1000,1000},{1,3,5,12,15,18,19,20,21,22,23,24,25,26,27,28,32,37,39,69,73,75,79,80,82,85,89,1000,1000,1000,1000,1000,1000},{1,2,10,11,12,13,14,15,16,17,21,26,28,58,62,64,68,69,71,74,78,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{9,10,12,16,17,53,54,57,58,60,63,67,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{9,10,50,51,52,53,54,55,56,57,61,66,68,126,130,132,136,137,139,142,146,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{49,51,53,55,125,126,127,128,129,130,131,132,133,134,135,136,140,145,147,219,223,225,229,230,232,235,239,1000,1000,1000,1000,1000,1000},{122,124,127,130,133,135,219,220,221,222,223,224,225,226,227,228,229,233,238,240,319,322,324,327,329,332,336,1000,1000,1000,1000,1000,1000},{218,220,223,226,228,319,320,321,322,323,324,325,326,330,335,337,423,424,426,429,433,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{320,322,325,326,423,427,432,434,524,526,528,531,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{423,425,428,431,433,524,525,526,527,528,529,530,531,535,540,542,628,629,631,634,638,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{525,526,529,533,536,539,541,629,630,631,632,633,634,635,636,637,638,639,643,648,650,729,732,733,735,738,742,1000,1000,1000,1000,1000,1000},{630,631,635,637,641,644,647,649,731,733,734,735,736,737,738,739,740,741,742,743,747,752,754,825,827,828,830,1000,1000,1000,1000,1000,1000},{734,735,739,741,745,748,751,753,826,827,828,829,830,831,832,833,837,842,844,898,899,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{828,831,832,835,838,841,843,898,899,902,905,906,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{835,836,840,842,846,849,852,854,899,900,901,902,903,904,905,906,910,915,917,938,939,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{846,847,851,853,857,860,863,865,902,903,907,908,909,910,911,912,913,914,915,916,917,921,926,928,938,940,942,1000,1000,1000,1000,1000,1000},{857,858,862,864,868,871,874,876,910,912,914,918,919,920,921,922,923,924,925,926,927,928,930,935,940,943,944,1000,1000,1000,1000,1000,1000},{868,869,873,875,879,882,885,887,921,923,925,929,930,931,932,933,934,935,937,944,945,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{811,812,816,818,822,823,890,892,893,896,897,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{718,719,723,725,728,813,815,817,821,822,823,824,896,897,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{621,622,624,625,720,722,724,728,821,822,824,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{214,215,216,310,312,314,318,415,418,419,422,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{120,121,206,208,210,214,215,216,217,307,311,313,317,318,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{115,116,117,120,121,203,207,209,213,215,217,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{4,5,7,8,29,33,35,39,41,43,46,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{2,3,4,5,6,8,18,22,24,28,29,31,34,38,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{1,2,4,6,13,14,17,18,20,23,27,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{49,50,52,56,57,123,124,126,128,131,135,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{49,50,122,123,124,125,129,134,136,218,219,221,224,228,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{122,123,125,218,222,227,229,319,321,323,326,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{525,527,530,531,628,632,637,639,729,730,731,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{628,630,633,636,638,729,730,731,732,736,741,743,825,826,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{730,732,734,737,740,742,825,826,829,832,833,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{901,904,905,908,911,914,916,938,939,941,943,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{908,909,913,915,919,922,925,927,939,940,941,942,943,945,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{919,920,924,926,931,933,934,941,942,944,945,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000}};
int triggers[109][33]={{39,48,49,132,133,142,212,222,232,304,305,306,379,388,397,468,469,479,548,559,568,640,647,648,724,734,735,807,816,827,899,900,907},{49,58,59,142,143,152,222,232,242,313,314,315,389,398,407,478,479,488,559,569,579,649,657,658,734,743,744,817,827,837,908,909,917},{40,49,50,133,134,143,213,223,233,305,306,307,380,389,398,469,470,480,549,560,569,641,648,649,725,735,736,808,817,828,900,901,908},{30,39,40,123,124,133,203,213,223,296,297,298,370,379,388,460,461,470,539,549,559,631,639,640,716,725,726,797,807,817,890,891,899},{29,38,39,122,123,132,202,212,222,295,296,297,369,378,387,459,460,469,538,548,558,630,638,639,715,724,725,796,806,816,889,890,898},{38,47,48,131,132,141,211,221,231,303,304,305,378,387,396,467,468,478,547,558,567,639,646,647,723,733,734,806,815,826,898,899,906},{48,57,58,141,142,151,221,231,241,312,313,314,388,397,406,477,478,487,558,568,578,648,656,657,733,742,743,816,826,836,907,908,916},{59,68,69,152,153,162,232,242,252,322,323,324,399,408,416,487,488,498,569,580,589,659,666,667,743,753,754,828,837,847,918,919,926},{50,59,60,143,144,153,223,233,243,314,315,316,390,399,408,479,480,489,560,570,580,650,658,659,735,744,745,818,828,838,909,910,918},{41,50,51,134,135,144,214,224,234,306,307,308,381,390,399,470,471,481,550,561,570,642,649,650,726,736,737,809,818,829,901,902,909},{31,40,41,124,125,134,204,214,224,297,298,299,371,380,389,461,462,471,540,550,560,632,640,641,717,726,727,798,808,818,891,892,900},{21,30,31,114,115,124,194,204,214,288,289,290,362,370,379,451,452,462,530,540,549,623,630,631,707,717,718,788,797,808,882,883,890},{20,29,30,113,114,123,193,203,213,287,288,289,361,369,378,450,451,461,529,539,548,622,629,630,706,716,717,787,796,807,881,882,889},{19,28,29,112,113,122,192,202,212,286,287,288,360,368,377,449,450,460,528,538,547,621,628,629,705,715,716,786,795,806,880,881,888},{28,37,38,121,122,131,201,211,221,294,295,296,368,377,386,458,459,468,537,547,557,629,637,638,714,723,724,795,805,815,888,889,897},{37,46,47,130,131,140,210,220,230,302,303,304,377,386,395,466,467,477,546,557,566,638,645,646,722,732,733,805,814,825,897,898,905},{47,56,57,140,141,150,220,230,240,311,312,313,387,396,405,476,477,486,557,567,577,647,655,656,732,741,742,815,825,835,906,907,915},{57,66,67,150,151,160,230,240,250,320,321,322,397,406,414,485,486,496,567,578,587,657,664,665,741,751,752,826,835,845,916,917,924},{58,67,68,151,152,161,231,241,251,321,322,323,398,407,415,486,487,497,568,579,588,658,665,666,742,752,753,827,836,846,917,918,925},{69,78,79,162,163,171,242,252,260,331,332,333,409,417,424,497,498,507,580,590,597,668,675,676,753,762,763,838,847,855,927,928,935},{60,69,70,153,154,163,233,243,253,323,324,325,400,409,417,488,489,499,570,581,590,660,667,668,744,754,755,829,838,848,919,920,927},{51,60,61,144,145,154,224,234,244,315,316,317,391,400,409,480,481,490,561,571,581,651,659,660,736,745,746,819,829,839,910,911,919},{42,51,52,135,136,145,215,225,235,307,308,309,382,391,400,471,472,482,551,562,571,643,650,651,727,737,738,810,819,830,902,903,910},{32,41,42,125,126,135,205,215,225,298,299,300,372,381,390,462,463,472,541,551,561,633,641,642,718,727,728,799,809,819,892,893,901},{22,31,32,115,116,125,195,205,215,289,290,291,363,371,380,452,453,463,531,541,550,624,631,632,708,718,719,789,798,809,883,884,891},{13,21,22,105,106,115,187,195,205,280,281,282,355,362,370,443,444,453,523,531,540,615,622,623,699,708,709,781,788,798,874,875,882},{12,20,21,104,105,114,186,194,204,279,280,281,354,361,369,442,443,452,522,530,539,614,621,622,698,707,708,780,787,797,873,874,881},{11,19,20,103,104,113,185,193,203,278,279,280,353,360,368,441,442,451,521,529,538,613,620,621,697,706,707,779,786,796,872,873,880},{10,18,19,102,103,112,184,192,202,277,278,279,352,359,367,440,441,450,520,528,537,612,619,620,696,705,706,778,785,795,871,872,879},{18,27,28,111,112,121,191,201,211,285,286,287,359,367,376,448,449,459,527,537,546,620,627,628,704,714,715,785,794,805,879,880,887},{27,36,37,120,121,130,200,210,220,293,294,295,367,376,385,457,458,467,536,546,556,628,636,637,713,722,723,794,804,814,887,888,896},{36,45,46,129,130,139,209,219,229,301,302,303,376,385,394,465,466,476,545,556,565,637,644,645,721,731,732,804,813,824,896,897,904},{46,55,56,139,140,149,219,229,239,310,311,312,386,395,404,475,476,485,556,566,576,646,654,655,731,740,741,814,824,834,905,906,914},{56,65,66,149,150,159,229,239,249,319,320,321,396,405,413,484,485,495,566,577,586,656,663,664,740,750,751,825,834,844,915,916,923},{66,75,76,159,160,168,239,249,257,328,329,330,406,414,421,494,495,504,577,587,594,665,672,673,750,759,760,835,844,852,924,925,932},{67,76,77,160,161,169,240,250,258,329,330,331,407,415,422,495,496,505,578,588,595,666,673,674,751,760,761,836,845,853,925,926,933},{68,77,78,161,162,170,241,251,259,330,331,332,408,416,423,496,497,506,579,589,596,667,674,675,752,761,762,837,846,854,926,927,934},{79,86,87,171,172,178,252,260,339,340,341,418,425,429,506,507,590,598,677,682,683,762,770,848,855,936,937,942,1000,1000,1000,1000,1000},{70,79,80,163,164,172,243,253,332,333,334,410,418,425,498,499,508,581,591,598,669,676,677,754,763,764,839,848,856,928,929,936,1000},{61,70,71,154,155,164,234,244,254,324,325,326,401,410,418,489,490,500,571,582,591,661,668,669,745,755,756,830,839,849,920,921,928},{52,61,62,145,146,155,225,235,245,316,317,392,401,410,481,482,491,562,572,582,652,660,661,737,746,747,820,830,840,911,912,920,1000},{43,52,53,136,137,146,216,226,236,308,309,383,392,401,472,473,552,563,572,651,652,728,738,811,820,831,903,911,1000,1000,1000,1000,1000},{33,42,43,126,127,136,206,216,226,299,300,373,382,391,463,464,473,542,552,562,634,642,643,719,728,729,800,810,820,893,894,902,1000},{23,32,33,116,117,126,196,206,216,290,291,292,364,372,381,453,454,464,532,542,551,625,632,633,709,719,720,790,799,810,884,885,892},{14,22,23,106,107,116,188,196,206,281,282,283,363,371,444,445,454,524,532,541,616,623,624,700,709,710,782,789,799,875,876,883,1000},{7,13,14,98,99,106,183,188,196,273,274,275,355,362,436,437,445,524,531,614,615,693,700,701,781,789,868,874,1000,1000,1000,1000,1000},{6,12,13,97,98,105,182,187,195,272,273,274,354,361,435,436,444,518,523,530,608,613,614,692,699,700,776,780,788,867,868,873,1000},{5,11,12,96,97,104,181,186,194,271,272,273,349,353,360,434,435,443,517,522,529,607,612,613,691,698,699,775,779,787,866,867,872},{4,10,11,95,96,103,185,193,270,271,272,348,352,359,433,434,442,516,521,528,606,611,612,690,697,698,774,778,786,865,866,871,1000},{3,9,10,94,95,102,184,192,269,270,271,347,351,358,433,441,520,527,605,610,611,696,697,777,785,864,865,870,1000,1000,1000,1000,1000},{9,17,18,101,102,111,191,201,276,277,278,351,358,366,439,440,449,519,527,536,611,618,619,695,704,705,777,784,794,870,871,878,1000},{17,26,27,110,111,120,190,200,210,284,285,286,358,366,375,447,448,458,526,536,545,619,626,627,703,713,714,784,793,804,878,879,886},{26,35,36,119,120,129,199,209,219,293,294,366,375,384,456,457,466,535,545,555,627,635,636,712,721,722,793,803,813,886,887,895,1000},{35,44,45,128,129,138,208,218,228,301,302,375,384,393,465,475,544,555,564,636,644,730,731,803,812,823,895,896,1000,1000,1000,1000,1000},{45,54,55,138,139,148,218,228,238,310,311,385,394,403,474,475,484,555,565,575,645,653,654,730,739,740,813,823,833,904,905,913,1000},{55,64,65,148,149,158,228,238,248,318,319,320,395,404,412,483,484,494,565,576,585,655,662,663,739,749,750,824,833,843,914,915,922},{65,74,75,158,159,167,238,248,256,327,328,329,405,413,493,494,503,576,586,593,664,671,672,749,758,759,834,843,851,923,924,931,1000},{75,82,83,167,168,174,248,256,261,335,336,337,414,421,502,503,510,586,594,673,679,758,766,767,844,851,932,933,1000,1000,1000,1000,1000},{76,83,84,168,169,175,249,257,262,336,337,338,415,422,503,504,511,587,595,599,674,679,680,759,767,768,845,852,857,933,934,939,1000},{77,84,85,169,170,176,250,258,263,337,338,339,416,423,427,504,505,512,588,596,600,675,680,681,760,768,769,846,853,858,934,935,940},{78,85,86,170,171,177,251,259,338,339,340,417,424,428,505,506,513,589,597,601,676,681,682,761,769,770,847,854,859,935,936,941,1000},{87,178,260,345,426,513,598,684,687,770,856,943,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{80,87,172,173,253,340,341,419,426,507,508,591,678,683,684,763,849,856,937,938,943,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{71,80,81,164,165,173,244,254,333,334,411,419,426,499,500,582,592,670,677,678,755,764,840,849,929,930,937,1000,1000,1000,1000,1000,1000},{62,71,72,155,156,165,235,245,325,326,402,411,419,490,491,572,583,592,669,670,746,756,831,840,850,921,929,1000,1000,1000,1000,1000,1000},{53,62,146,156,226,236,317,402,411,482,563,573,583,661,738,747,821,831,841,912,921,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{53,137,217,309,402,473,553,573,652,729,821,912,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{34,43,127,137,207,217,300,383,392,464,543,553,563,643,720,729,801,811,821,894,903,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{24,33,34,117,118,127,197,207,217,291,292,373,382,454,455,533,543,552,633,634,710,720,791,800,811,885,893,1000,1000,1000,1000,1000,1000},{15,23,24,107,108,117,189,197,207,282,283,364,372,445,446,455,533,542,624,625,701,710,711,790,800,876,884,1000,1000,1000,1000,1000,1000},{14,15,99,107,189,197,274,275,363,437,438,446,532,615,616,694,701,702,782,790,875,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{7,99,189,268,355,432,438,524,608,694,782,868,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{6,7,93,98,183,188,267,268,354,431,432,437,523,607,608,689,693,694,776,781,867,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{2,5,6,92,93,97,182,187,266,267,268,349,353,430,431,436,518,522,606,607,688,692,693,775,780,862,866,1000,1000,1000,1000,1000,1000},{1,4,5,91,92,96,181,186,265,266,267,348,352,430,435,517,521,603,605,606,691,692,774,779,861,862,865,1000,1000,1000,1000,1000,1000},{3,4,91,95,185,265,266,347,351,434,516,520,602,604,605,690,691,778,860,861,864,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{3,94,184,265,350,433,519,604,690,777,860,863,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{8,9,94,101,191,269,270,350,357,440,519,526,604,609,610,695,696,784,863,864,869,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{8,16,17,100,101,110,190,200,276,277,350,357,365,439,448,526,535,610,617,618,703,704,783,793,869,870,877,1000,1000,1000,1000,1000,1000},{16,25,26,109,110,119,199,209,284,285,357,365,374,447,457,525,535,544,618,626,712,713,783,792,803,877,878,1000,1000,1000,1000,1000,1000},{25,35,119,128,208,218,293,365,374,456,465,534,544,554,626,635,721,792,802,812,886,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{44,128,227,301,374,474,554,635,730,802,822,895,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{44,54,138,147,227,237,310,384,393,474,483,554,564,574,644,653,739,812,822,832,904,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{54,63,64,147,148,157,227,237,247,318,319,394,403,483,493,564,575,584,654,662,748,749,823,832,842,913,914,1000,1000,1000,1000,1000,1000},{64,73,74,157,158,166,237,247,255,327,328,404,412,492,493,502,575,585,663,671,748,757,758,833,842,922,923,1000,1000,1000,1000,1000,1000},{74,82,166,167,247,255,335,336,413,501,502,509,585,593,672,757,765,766,843,931,932,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{82,174,255,342,421,509,593,679,765,771,851,939,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{83,88,174,175,256,261,342,343,422,509,510,514,594,599,680,766,771,772,852,939,940,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{84,88,89,175,176,179,257,262,342,343,344,423,427,510,511,515,595,600,681,685,767,772,773,853,857,940,941,1000,1000,1000,1000,1000,1000},{85,89,90,176,177,180,258,263,343,344,345,424,428,511,512,596,601,682,685,686,768,773,854,858,941,942,944,1000,1000,1000,1000,1000,1000},{86,90,177,178,259,344,345,425,429,512,513,597,683,686,687,769,855,859,942,943,945,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{81,173,254,341,420,508,592,684,764,850,938,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{72,81,165,245,334,420,500,583,678,756,841,850,930,938,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{72,156,236,326,420,491,573,670,747,841,930,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{34,118,198,292,383,455,553,634,711,801,894,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{24,108,118,198,283,373,446,543,625,702,711,791,801,885,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{15,108,198,275,364,438,533,616,702,791,876,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{2,93,183,264,349,432,518,603,689,776,862,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{1,2,92,182,264,348,431,517,602,603,688,689,775,861,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{1,91,181,264,347,430,516,602,688,774,860,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{8,100,190,269,356,439,525,609,695,783,863,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{16,100,109,199,276,356,447,525,534,609,617,703,792,869,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{25,109,208,284,356,456,534,617,712,802,877,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{63,147,246,318,393,492,574,653,748,822,913,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{63,73,157,246,327,403,492,501,574,584,662,757,832,922,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{73,166,246,335,412,501,584,671,765,842,931,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{88,179,261,346,427,514,599,685,771,857,944,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{89,179,180,262,346,428,514,515,600,686,772,858,944,945,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000},{90,180,263,346,429,515,601,687,773,859,945,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000}};

char *Basename;
int tcini={0},t={0},to[10]={0,0,0,0,0,0,0,0,0,0};
bool TG5, TL2, TL3, key;


int main(int argc, char *argv[]){


char LEVinfo[10];
char sep[1];

char *S;
char tline[1000];
char timestamp[1000];
float P1[112];
float P2[112];
float data[112][1024];
int data2[112][512];
int L3trigg[945];
int discriminatortimer[112];
int k={0};
int k1={0};
int TG5time;
int TL2time;
int TL3time;
int triggermask[109]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
int classificationmask[109]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
int EID;
int ultralevel[1020];
int ultralevelmax={0};
int PulseLength={0};
int SignalSum={0};
int PulsePosition={0};
//======================================================
//init block
for (i=0;i<112;i++){
    Toff[i]=0;
    Tm[i]=0.0;
    P1[i]=0.0;
    P2[i]=0.0;
    discriminatortimer[i]=0;
    if (i<109)
    for (j=0;j<1024;j++){
	if (j<512) feed[i][j]=0;
	if (j<512) data2[i][j]=0;
	data[i][j]=0.0;
    }
}
//======================================================

sprintf(sep,"\t");
sprintf(LEVinfo,"levels.dat");

//======================================================
//turn off broken channels (manually or via import of the trigger data
triggermask[49]=0;
triggermask[78]=0;
//======================================================

if (argc !=2){
printf("\nIncorrect usage.\n\n");
return 1;
}


Basename=argv[1];
if (verbose) printf("%s\n",Basename);

//read a time refine data

fp=fopen(Basename,"r");
if (fp!=NULL){
//telemetry info skip
    fgets(tline,1000,fp);
    strtok(tline,">"); //cut the <EID> tag
    EID=atoi(strtok(NULL,"<")); //get EID
    printf("EID: %i\t",EID);
    if (verbose) printf("\n");
    for (i=0;i<8;i++){
	fgets(timestamp,1000,fp);
    }
    for (i=0;i<20;i++){
	printf("%c",timestamp[i]);
    }
    printf("\t");
    for (i=0;i<29;i++){
	fgets(tline,1000,fp);
    }
//data block
    for (j=0;j<1020;j++){
	fgets(tline,1000,fp);
	strtok(tline," ");   // line number deletion
	for (i=0;i<112;i++){	    
	    S=strtok(NULL," ");
	    data[i][j]=atof(S);
	    if (data[i][j]<0) data[i][j]=0; //translation error protection
	    if ((j>9)&&(j<410)){
		if (j%2) P1[i]=P1[i]+data[i][j]/200;
		else P2[i]=P2[i]+data[i][j]/200;
	    }
	}
    }
    fclose(fp);

//read levels
    key=true;
    fp=fopen(LEVinfo,"r");
    if (fp==NULL){
	printf("!!!\n");
    }
    while (key) {
	fgets(tline,1000,fp);
	i=atoi(strtok(tline," "));
	if (i==EID){
	if (verbose) printf("levels: ");
	    strtok(NULL," ");
	    strtok(NULL," ");
	    strtok(NULL,sep);
	    key=false;
	    for (i=0;i<112;i++){
		levels[i]=atoi(strtok(NULL,sep));
		if (verbose) printf("%5i",levels[i]);
	    }
	}
    }
    if (verbose) printf("\n");
    fclose(fp);
    
    //frame claasification over total flux
    for (i=0;i<109;i++){
	for (j=0;j<1020;j++) SignalSum=SignalSum+data[i][j]-(j%2)*P1[i]-((j+1)%2)*P2[i];
	
    }
    
    //frame classification over pulse length 
    t=0;
    to[9]=0;
    to[8]=0;
    to[7]=0;
    to[6]=0;
    to[5]=0;
    to[4]=0;
    to[3]=0;
    to[2]=0;
    to[1]=0;
    to[0]=0;
    for (i=0;i<112;i++){
	if (triggermask[i]){
	    for (j=2;j<900;j++){
		if (((j%2)&&(data[i][j]>P1[i]+5))||(((j+1)%2)&&(data[i][j]>P2[i]+5))) t=t+1;
		else {
		    if (t>to[9]){
			if (t>to[0]){
			    for (k=9;k>0;k--){
				to[k]=to[k-1];
			    }
			    to[0]=t;
			}
			else {
			    for (k=0;k<9;k++){
				if ((t<to[k])&&(t>=to[k+1])){
				    for (k1=9;k1>k+1;k1--){
					to[k1]=to[k1-1];
				    }
				    to[k+1]=t;
				}
			    }
			}
		    }
		    t=0;
		}
	    }
	}
    }

    if (SignalSum>3000000){  //calibration frame
	printf("Type: C\t0\t%i\t",SignalSum);
	if (verbose) printf("\n T offset: ");
	for (i=0;i<112;i++){
	    for (j=1019;j>0;j--){
		if (j%2) {
		    if (data[i][j]>P1[i]+50) Toff[i]=j-486;
		}
		else {
		    if (data[i][j]>P2[i]+50) Toff[i]=j-486;
		}
	    }
	    if (abs(Toff[i])>30) Toff[i]=0;
	    Toff[i]=round((Toff[i])/2);
	    if (verbose) printf("%i ",Toff[i]);
	    for (j=10;j<512;j++){
		if ((((j+Toff[i])*2)<1020)&&(((j+Toff[i])*2)>=0)) {
		    feed[i][j]=data[i][(j+Toff[i])*2];
		}
		else feed[i][j]=int(P1[i]);
	    }
	}
	if (verbose) printf("\n");
    }
    else{
	SignalSum=0;
	
	printf("Type: ");
	for (i=0;i<112;i++){
	// time drift correction block
	    Sc=0;
	    t=800;
	    Tm[i]=0;
	    for (j=900;j<1020;j++){
		if (data[i][j]>Sc) {
		    Sc=data[i][j];
		    t=j;
		}
	    }
	    while (data[i][t]>((t%2)*P1[i]+((t+1)%2)*P2[i])+5){
		t=t-1;
		if (t<800) break;
	    }
	    t=t+1;
	    Sc=0;
	    tcini=t;
	    //if (verbose) printf("%i\t%i\t",i,tcini);
	    while ((data[i][t]>(((t)%2)*P1[i]+((t+1)%2)*P2[i]+5))&&((t-tcini)<21)&&(t<1020)){
		t=t+1;
		Tm[i]=Tm[i]+t*(data[i][t]-((t)%2)*P1[i]-((t+1)%2)*P2[i]);
		Sc=Sc+data[i][t]-((t)%2)*P1[i]-((t+1)%2)*P2[i];
	    }
	    
	    if (Sc>100) Toff[i]=round((Tm[i]/Sc-948)/2);
	    else Toff[i]=0;
	// end of time drif correction block    
	    	    
	    	    
	// channel malfunction detection
	    SignalSum=0;
	    for (j=0;j<900;j++){
		if ((data[i][j]-(j%2)*P1[i]-((j+1)%2)*P2[i])>(levels[i]/4-P1[i])) SignalSum=SignalSum+(data[i][j]-(j%2)*P1[i]-((j+1)%2)*P2[i]);
	    }
	    if (SignalSum>3000) classificationmask[i]=0;
	    for (j=10;j<512;j++){		
		if ((((j+Toff[i])*2)<1019)&&(((j+Toff[i])*2)>=0)) {		
		    feed[i][j]=data[i][(j+Toff[i])*2];
		    if (data[i][(j+Toff[i])*2]>(levels[i]/4)) ultralevel[j*2]=ultralevel[j*2]+(data[i][(j+Toff[i])*2]-P2[i])*triggermask[i]*classificationmask[i];
		    if ((data[i][(j+Toff[i])*2+1]-P1[i]+P2[i])>(levels[i]/4)) ultralevel[j*2+1]=ultralevel[j*2+1]+(data[i][(j+Toff[i])*2+1]-P1[i])*triggermask[i]*classificationmask[i];
		    if ((j>230)&&(j<250)&&(ultralevelmax<ultralevel[2*j])) {
			ultralevelmax=ultralevel[2*j];
			k1=2*j;
			PulsePosition=2*j;
		    }
		    if ((j>230)&&(j<250)&&(ultralevelmax<ultralevel[2*j+1])) {
			ultralevelmax=ultralevel[2*j+1];
			k1=2*j+1;
			PulsePosition=2*j+1;
		    }
		}
		else feed[i][j]=int(P1[i]);
	    }
	}
    
	SignalSum=0;
	while (ultralevel[PulsePosition]>(0.1*ultralevelmax)) PulsePosition=PulsePosition-1;
        PulsePosition=PulsePosition+1;
	while (ultralevel[PulsePosition]>(0.1*ultralevelmax)) {
	    PulsePosition=PulsePosition+1;
	    SignalSum=SignalSum+ultralevel[PulsePosition];
	    PulseLength=PulseLength+1;
	}

	if (verbose) {    
	    for (j=10;j<900;j++){
		if (ultralevel[j]>.05*ultralevelmax) printf("\n%i\t%6i\t*",j,ultralevel[j]);
		else printf("\n%i\t%6i\t ",j,ultralevel[j]);
	    }
	}

	if (PulseLength<4) printf("L\t");	
	if ((15*pow(PulseLength,2.5)/SignalSum)<1) printf("L\t");
	else if ((to[3]>50)||(PulseLength>160)) printf("D\t");
        else printf("E\t");
	printf("%i\t%i\t",PulseLength,SignalSum);
	if (verbose) printf("\n");
    }

    
//feed[][] contains as-if-live thick channel data stream 
//starting trigger operation
    TG5=false;
    TL3=false;
    
    if (verbose) {
	printf("trigger state: ");
	for (i=0;i<109;i++) printf("%i",triggermask[i]);
	printf("\n");
    }

    for (j=0;j<512;j++){  //live feed imitation
	k=0; //resetting number of triggered PMTs for G5-master
	if (verbose) printf("%i\t",j);
	for (i=1;i<945;i++) L3trigg[i]=0;  //TL3 state reset
	
	for (i=0;i<112;i++){
	    data2[i][j]=data2[i][j]+feed[i][j];
	    if (j<511) data2[i][j+1]=data2[i][j+1]+feed[i][j];
	    if (j<510) data2[i][j+2]=data2[i][j+2]+feed[i][j];
	    if (j<509) data2[i][j+3]=data2[i][j+3]+feed[i][j];
	    //if (verbose) printf("%5i",data2[i][j]-levels[i]);
	    if ((data2[i][j]>levels[i])&&(j>0)) {
		discriminatortimer[i]=DET*triggermask[i];
		k=k+triggermask[i];
		if (verbose) {
		    if (triggermask[1]>0) printf("8");
		    else printf("x");
		}
		for (k1=0;k1<33;k1++){
		    if ((triggers[i][k1]<900)&&(i<109)){
			L3trigg[triggers[i][k1]]=L3trigg[triggers[i][k1]]+triggermask[i];
		    }
		}
	    }
	    else{
		discriminatortimer[i]=discriminatortimer[i]-1;
		if (discriminatortimer[i]<=0) {
		    discriminatortimer[i]=0;
		    if (verbose) printf(".");
		}
		else {
		    if (verbose) printf("0");
			k=k+triggermask[i];
			for (k1=0;k1<33;k1++){
			    if ((triggers[i][k1]<900)&&(i<109)){
			    L3trigg[triggers[i][k1]]=L3trigg[triggers[i][k1]]+triggermask[i];
			}
		    }
		}
	    }
	}
//TG5 check
	if ((k>=GMASTER)&&(!TG5)) {
	    TG5=true;
	    TG5time=j;
	};
	if (verbose) printf("\t%i\t\n",k);
//TL3 check
// debug
    if(debug)
    {
	if ((j>240)&&(j<246)){
	    if (verbose) {
		printf("\n\ntrigger mark expected location\n");
		for (k=0;k<15;k++){
		    for (k1=0;k1<k;k1++) printf(" ");
		    for (k1=0;k1<15;k1++){
			if (F[k][k1]<1000){
			    if (discriminatortimer[F[k][k1]]>0) printf("8 ");
			    else {
				if (triggermask[F[k][k1]]>0) printf(". ");
				else printf ("x ");
			    }
			}
			else printf("  ");
		    }
		    printf("\n");
		}
		printf("\n\n");
	    }
	}
    }
	if (!TL3){
	    for (i=0;i<L3limit;i++){
		if (L3trigg[i]>=3){
		    if ((verbose)&&(!TL3)) {
			printf("\n\nL3 triggered:\n");
			for (k=0;k<15;k++){
			    for (k1=0;k1<k;k1++) printf(" ");
			    for (k1=0;k1<15;k1++){
				if (F[k][k1]<1000){
				    if (discriminatortimer[F[k][k1]]>0) printf("8 ");
				    else printf(". ");
				}
				else printf("  ");
			    }
			    printf("\n");
			}
			printf("\n\n");
		    }
		    TL3=true;
		    TL3time=j;
		    
		}
	    }
	}
	if (!TL2){
	    for (i=0;i<L3limit;i++){
		if (L3trigg[i]==2){
		    if ((verbose)&&(!TL2)) {
    			printf("\n\nL2 triggered:\n");
			for (k=0;k<15;k++){
			    for (k1=0;k1<k;k1++) printf(" ");
			    for (k1=0;k1<15;k1++){
				if (F[k][k1]<1000){
				    if (discriminatortimer[F[k][k1]]>0) printf("8 ");
				    else printf(". ");
				}
				else printf("  ");
			    }
			    printf("\n");
			}
			printf("\n\n");
		    }
		    TL2=true;
		    TL2time=j;
		    
		}
	    }
	}
    }
    printf("TG5time = %3i\tTL2time = %3i\tTL3time = %3i\t",TG5time,TL2time,TL3time);
    if (TG5time<TL2time) printf("TRIGGER: %i\t",TG5time);
    else printf("TRIGGER: %i\t",TL2time);
    if (verbose) printf("\n");
}
else{
    printf("no such event");
}
printf("\n");
}
